{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"module.exports = startob async function startob () { let msg = \"第一次运行，需要打开库文件夹，并选择'20-Diary'目录作为库打开，否则会报错。\"; await ToastMessage(`${msg}`,20,...","date":"2023-01-23T09:28:57.304Z","updated":"2022-08-11T05:38:03.000Z","comments":true,"path":"api/pages/88-Template/script/openOb.js","covers":null,"excerpt":"","content":"module.exports = startob\n\nasync function startob () {\n let msg = \"第一次运行，需要打开库文件夹，并选择'20-Diary'目录作为库打开，否则会报错。\";\n await ToastMessage(`${msg}`,20, async ()=>{execommand('打开其他仓库')  });\n window.open('obsidian://open?vault=20-Diary')\n}\n\nfunction ToastMessage(msg, timeoutInSeconds = 10, contextMenuCallback = null){\n    \n    const additionalInfo = contextMenuCallback ? \"(点我消除提示，右击打开库文件夹)\" : \"\";\n    const newNotice = new Notice(`⚡⚡⚡\\n${msg}\\n${additionalInfo}`, timeoutInSeconds*1000);\n    //@ts-ignore\n    if(contextMenuCallback) newNotice.noticeEl.oncontextmenu = async () => { contextMenuCallback() };\n}\n\nfunction execommand(action){\n\tconst allCommands = app.commands.listCommands();\n    const command = allCommands.filter((command) => command.name.toUpperCase() === action.toUpperCase().trim())[0];\n    app.commands.executeCommandById(command.id);\n\t}","count_time":{"symbolsCount":849,"symbolsTime":"1 mins."},"toc":""}