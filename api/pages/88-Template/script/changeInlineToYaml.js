{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"//from bon 2022-11-29 //作用 把::的内联字段转为yaml字段 function generateNewContent(content){ const lines = content.split(/\\r?\\n/); let topAdded = false...","date":"2023-01-23T09:28:57.298Z","updated":"2022-11-29T04:28:45.208Z","comments":true,"path":"api/pages/88-Template/script/changeInlineToYaml.js","covers":null,"excerpt":"","content":"//from bon 2022-11-29 \n//作用 把::的内联字段转为yaml字段\nfunction generateNewContent(content){\n    const lines = content.split(/\\r?\\n/);\n    let topAdded = false;\n    const splitLine = \"---\";\n    let bottomAdded = false;\n    for(let i = 0; i < lines.length ; i++) {\n          let newYAML = \"\";\n          \n          if(/^\\s{0,}$/.test(lines[i]) || /^---$/.test(lines[i])) break;\n          if(/^([^:]*)::(.*)/g.test(lines[i])) {\n                 newYAML = lines[i].replace(/^([^:]*):: (.*)/g, '$1: $2');\n                 if(!topAdded) {\n                       lines.splice(i, 1, splitLine, newYAML);\n                       console.log(lines);\n                       topAdded = true;\n                       continue;\n                 }\n                 if(!bottomAdded && topAdded && /^\\s{0,}$/.test(lines[i+1])) {\n                 \t lines.splice(i, 1, newYAML, splitLine);\n                      bottomAdded = true;\n                      continue;\n                 }\n                 lines.splice(i, 1, newYAML);\n          }\n    }\n\n    return lines.join('\\n');\n}\n\nmodule.exports = async (params) => {\n    const currentFile = app.workspace.activeLeaf.view.file;\n    const content = await app.vault.cachedRead(currentFile);\n    const newContent = generateNewContent(content);\n    try {\n         app.vault.modify(currentFile, newContent);\t\n    } catch(e) {\n         new Notice(e);\t\n    }\n}","count_time":{"symbolsCount":518,"symbolsTime":"1 mins."},"toc":""}