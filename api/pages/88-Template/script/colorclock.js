{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"module.exports = colorclock let quickAddApi; async function colorclock (params) { ({quickAddApi} = params) //查看文件是否存在 function constructor(q...","date":"2023-01-23T09:28:57.299Z","updated":"2022-01-21T12:47:17.000Z","comments":true,"path":"api/pages/88-Template/script/colorclock.js","covers":null,"excerpt":"","content":"module.exports = colorclock\nlet quickAddApi;\n\nasync function colorclock (params) {\n    ({quickAddApi} = params) \n//查看文件是否存在\n\n\tfunction constructor(qs) {\n\t\tel = document.querySelector(qs);\n\t\ttime = 0;\n\t\tupdateTimeout = null;\n\t\tringTimeouts = [];\n\t\tupdate();\n\t}\n\tfunction getDayOfWeek(day) {\n\t\n\t\t switch (day) {\n\t\t\tcase 1:\n\t\t\t\treturn \"Monday\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Tuesday\";\n\t\t\tcase 3:\n\t\t\t\treturn \"Wednesday\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Thursday\";\n\t\t\tcase 5:\n\t\t\t\treturn \"Friday\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Saturday\";\n\t\t\tdefault:\n\t\t\t\treturn \"Sunday\";\n\t\t}\n\t\t\n\t}\n\tfunction getMonthInfo(mo,yr) {\t\n\tswitch (mo) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn { name: \"February\", days: yr % 4 === 0 ? 29 : 28 };\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn { name: \"March\", days: 31 };\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn { name: \"April\", days: 30 };\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn { name: \"May\", days: 31 };\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn { name: \"June\", days: 30 };\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\treturn { name: \"July\", days: 31 };\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\treturn { name: \"August\", days: 31 };\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn { name: \"September\", days: 30 };\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn { name: \"October\", days: 31 };\n\t\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\treturn { name: \"November\", days: 30 };\n\t\t\t\t\t\tcase 11:\n\t\t\t\t\t\t\treturn { name: \"December\", days: 31 };\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn { name: \"January\", days: 31 };\n\t\t\t\t\t}\n\t\t\n\t}\n\tfunction update() {\n\t\tlet time = new Date();\n\n\t\tif (el) {\n\t\t\t// date and time\n\t\t\tconst dayOfWeek = time.getDay();\n\t\t\tconst year = time.getFullYear();\n\t\t\tconst month = time.getMonth();\n\t\t\tconst day = time.getDate();\n\t\t\tconst hr = time.getHours();\n\t\t\tconst min = time.getMinutes();\n\t\t\tconst sec = time.getSeconds();\n\t\t\tconst dayOfWeekName = getDayOfWeek(dayOfWeek);\n\t\t\tconst monthInfo = getMonthInfo(month,year);\n\t\t\tconst m_progress = sec / 60;\n\t\t\tconst h_progress = (min + m_progress) / 60;\n\t\t\tconst d_progress = (hr + h_progress) / 24;\n\t\t\tconst mo_progress = ((day - 1) + d_progress) / monthInfo.days;\n\t\t\tconst units = [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"w\",\n\t\t\t\t\tvalue: dayOfWeekName\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"mo\",\n\t\t\t\t\tvalue: monthInfo.name,\n\t\t\t\t\tprogress: mo_progress\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"d\", \n\t\t\t\t\tvalue: day,\n\t\t\t\t\tprogress: d_progress\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"h\", \n\t\t\t\t\tvalue: hr > 12 ? hr - 12 : hr,\n\t\t\t\t\tprogress: h_progress\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"m\", \n\t\t\t\t\tvalue: min < 10 ? \"0\" + min : min,\n\t\t\t\t\tprogress: m_progress\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"s\", \n\t\t\t\t\tvalue: sec < 10 ? \"0\" + sec : sec\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"ap\",\n\t\t\t\t\tvalue: hr > 12 ? \"PM\" : \"AM\"\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t// flush out the timeouts\n\t\t\tringTimeouts.forEach(t => {\n\t\t\t\tclearTimeout(t);\n\t\t\t});\n\t\t\tringTimeouts = [];\n\n\t\t\t// update the display\n\t\t\tunits.forEach(u => {\n\t\t\t\t// rings\n\t\t\t\tconst ring = el.querySelector(`[data-ring=\"${u.label}\"]`);\n\n\t\t\t\tif (ring) {\n\t\t\t\t\tconst strokeDashArray = ring.getAttribute(\"stroke-dasharray\");\n\t\t\t\t\tconst fill360 = \"progress-clock__ring-fill--360\";\n\n\t\t\t\t\tif (strokeDashArray) {\n\t\t\t\t\t\t// calculate the stroke\n\t\t\t\t\t\tconst circumference = +strokeDashArray.split(\" \")[0];\n\t\t\t\t\t\tconst strokeDashOffsetPct = 1 - u.progress;\n\n\t\t\t\t\t\tring.setAttribute(\n\t\t\t\t\t\t\t\"stroke-dashoffset\",\n\t\t\t\t\t\t\tstrokeDashOffsetPct * circumference\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// add the fade-out transition, then remove it\n\t\t\t\t\t\tif (strokeDashOffsetPct === 1) {\n\t\t\t\t\t\t\tring.classList.add(fill360);\n\n\t\t\t\t\t\t\tringTimeouts.push(\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tring.classList.remove(fill360);\n\t\t\t\t\t\t\t\t}, 600)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// digits\n\t\t\t\tconst unit = el.querySelector(`[data-unit=\"${u.label}\"]`);\n\n\t\t\t\tif (unit)\n\t\t\t\t\tunit.innerText = u.value;\n\t\t\t});\n\t\t}\n\n\t\tclearTimeout(updateTimeout);\n\t\tupdateTimeout = setTimeout(update.bind(this),1e3);\n\t}\nlet el;\nlet time;\nlet updateTimeout;\nlet ringTimeouts;\nconstructor('#clock');\n\n}\n","count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"toc":""}