{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"let {pages, globalTaskFilter, dailyNoteFolder, dailyNoteFormat, done, sort, starred, options} = input; // Error Handling if (!pages && pages...","date":"2023-01-23T09:28:57.298Z","updated":"2023-01-04T01:18:27.538Z","comments":true,"path":"api/pages/88-Template/script/TasksTimeline/view.js","covers":null,"excerpt":"","content":"let {pages, globalTaskFilter, dailyNoteFolder, dailyNoteFormat, done, sort, starred, options} = input;\n\n// Error Handling\nif (!pages && pages!=\"\") { dv.span('> [!ERROR] Missing pages parameter\\n> \\n> Please set the pages parameter like\\n> \\n> `pages: \"\"`'); return false };\nif (dailyNoteFormat) { if (dailyNoteFormat.match(/[|\\\\YMDWwd.,-: \\[\\]]/g).length != dailyNoteFormat.length) { dv.span('> [!ERROR] The `dailyNoteFormat` contains invalid characters'); return false }};\n\n// Get, Set, Eval Pages\nif (pages==\"\") { var tasks = dv.pages().file.tasks } else { if (pages.startsWith(\"dv.pages\")) { var tasks = eval(pages) } else { var tasks = dv.pages(pages).file.tasks } };\nif (!options) {options = \"\"};\nif (!dailyNoteFolder) {dailyNoteFolder = \"\"} else {dailyNoteFolder = dailyNoteFolder+\"/\"};\nif (!dailyNoteFormat) {dailyNoteFormat = \"YYYY-MM-DD\"};\nif (!sort) {sort = \"!t.completed && Object.keys(t.happens).find(key => t.happens[key] === timelineDates[i].toString())\"};\n\n// Variables\nvar timelineDates = [];\nvar timelineNotes = dv.pages().file.filter(f=>f.starred == true && timelineDates.push(moment(f.cday.toString()).format(\"YYYY-MM-DD\")) );\nvar tid = (new Date()).getTime();\nvar today = moment().format(\"YYYY-MM-DD\");\nvar dailyNoteRegEx = momentToRegex(dailyNoteFormat)\n\n// Set Root\nconst rootNode = dv.el(\"div\", \"\", {cls: \"taskido \"+options, attr: {id: \"taskido\"+tid}});\n\n// Icons\n// var doneIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>';\nvar doneIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"9 11 12 14 22 4\"></polyline><path d=\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"></path></svg>';\nvar dueIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line><line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line><line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line></svg>';\nvar scheduledIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M5 22h14\"></path><path d=\"M5 2h14\"></path><path d=\"M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22\"></path><path d=\"M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2\"></path></svg>';\nvar startIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z\"></path></svg>';\nvar overdueIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line></svg>';\n// var processIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M5 22h14\"></path><path d=\"M5 2h14\"></path><path d=\"M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22\"></path><path d=\"M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2\"></path></svg>';\nvar processIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 6H5a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h13l4-3.5L18 6Z\"></path><path d=\"M12 13v9\"></path><path d=\"M12 2v4\"></path></svg>';\nvar dailynoteIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline></svg>';\n// var dailytaskIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle></svg>';\nvar dailytaskIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect></svg>';\n// var addIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>';\nvar addIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>';\nvar tagIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z\"></path><path d=\"M7 7h.01\"></path></svg>';\nvar repeatIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m17 2 4 4-4 4\"></path><path d=\"M3 11v-1a4 4 0 0 1 4-4h14\"></path><path d=\"m7 22-4-4 4-4\"></path><path d=\"M21 13v1a4 4 0 0 1-4 4H3\"></path></svg>';\nvar priorityIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"></line><line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"></line></svg>';\nvar starIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline></svg>';\n\n// Initialze\ngetMeta(tasks);\ngetTimeline(tasks);\nsetEvents();\n\nfunction getMeta(tasks) {\n\tfor (i=0;i<tasks.length;i++) {\n\t\tlet happens = {};\n\t\tvar taskText = tasks[i].text;\n\t\tvar taskFile = getFilename(tasks[i].path);\n\t\tvar dailyNoteMatch = taskFile.match(eval(dailyNoteRegEx));\n\t\tvar dailyTaskMatch = taskText.match(/(\\d{4}\\-\\d{2}\\-\\d{2})/);\n\t\tif (dailyNoteMatch && tasks[i].completed == false) {\n\t\t\tif(!dailyTaskMatch) {\n\t\t\t\ttasks[i].dailytask = moment(dailyNoteMatch[1], dailyNoteFormat).format(\"YYYY-MM-DD\");\n\t\t\t\thappens[\"dailytask\"] = moment(dailyNoteMatch[1], dailyNoteFormat).format(\"YYYY-MM-DD\");\n\t\t\t\ttimelineDates.push(moment(dailyNoteMatch[1], dailyNoteFormat).format(\"YYYY-MM-DD\"));\n\t\t\t};\n\t\t};\n\t\tvar dueMatch = taskText.match(/\\📅\\W(\\d{4}\\-\\d{2}\\-\\d{2})/);\n\t\tif (dueMatch && tasks[i].completed == false) {\n\t\t\ttasks[i].text = tasks[i].text.replace(dueMatch[0], \"\");\n\t\t\ttimelineDates.push(dueMatch[1]);\n\t\t\tif ( dueMatch[1] < moment().format(\"YYYY-MM-DD\") ) {\n\t\t\t\thappens[\"overdue\"] = dueMatch[1];\n\t\t\t} else {\n\t\t\t\thappens[\"due\"] = dueMatch[1];\n\t\t\t};\n\t\t} else if (dueMatch && tasks[i].completed == true) {\n\t\t\ttasks[i].text = tasks[i].text.replace(dueMatch[0], \"\");\n\t\t};\n\t\tvar startMatch = taskText.match(/\\🛫\\W(\\d{4}\\-\\d{2}\\-\\d{2})/);\n\t\tif (startMatch && tasks[i].completed == false) {\n\t\t\ttasks[i].text = tasks[i].text.replace(startMatch[0], \"\");\n\t\t\tif ( startMatch[1] < moment().format(\"YYYY-MM-DD\") ) {\n\t\t\t\thappens[\"process\"] = moment().format(\"YYYY-MM-DD\");\n\t\t\t} else {\n\t\t\t\thappens[\"start\"] = startMatch[1];\n\t\t\t\ttimelineDates.push(startMatch[1]);\n\t\t\t};\n\t\t} else if (startMatch && tasks[i].completed == true) {\n\t\t\ttasks[i].text = tasks[i].text.replace(startMatch[0], \"\");\n\t\t};\n\t\tvar scheduledMatch = taskText.match(/\\⏳\\W(\\d{4}\\-\\d{2}\\-\\d{2})/);\n\t\tif (scheduledMatch && tasks[i].completed == false) {\n\t\t\ttasks[i].text = tasks[i].text.replace(scheduledMatch[0], \"\");\n\t\t\tif ( scheduledMatch[1] < moment().format(\"YYYY-MM-DD\") ) {\n\t\t\t\thappens[\"process\"] = moment().format(\"YYYY-MM-DD\");\n\t\t\t} else {\n\t\t\t\thappens[\"scheduled\"] = scheduledMatch[1];\n\t\t\t\ttimelineDates.push(scheduledMatch[1]);\n\t\t\t};\n\t\t} else if (scheduledMatch && tasks[i].completed == true) {\n\t\t\ttasks[i].text = tasks[i].text.replace(scheduledMatch[0], \"\");\n\t\t};\n\t\tvar doneMatch = taskText.match(/\\✅\\W(\\d{4}\\-\\d{2}\\-\\d{2})/);\n\t\tif (doneMatch && tasks[i].completed == true) {\n\t\t\ttasks[i].text = tasks[i].text.replace(doneMatch[0], \"\");\n\t\t\tif (done == true || doneMatch[1] == moment().format(\"YYYY-MM-DD\")) {\n\t\t\t\ttimelineDates.push(doneMatch[1]);\n\t\t\t\thappens[\"done\"] = doneMatch[1];\n\t\t\t};\n\t\t};\n\t\tvar repeatMatch = taskText.includes(\"🔁\");\n\t\tif (repeatMatch) {\n\t\t\ttasks[i].repeat = tasks[i].text.substring(taskText.indexOf(\"🔁\"), tasks[i].text.length);\n\t\t\ttasks[i].text = tasks[i].text.substring(0, taskText.indexOf(\"🔁\"))\n\t\t};\n\t\tvar lowMatch = taskText.includes(\"🔽\");\n\t\tif (lowMatch) {\n\t\t\ttasks[i].text = tasks[i].text.replace(\"🔽\",\"\");\n\t\t\ttasks[i].priority = \"D\";\n\t\t\ttasks[i].priorityLabel = \"low priority\";\n\t\t};\n\t\tvar mediumMatch = taskText.includes(\"🔼\");\n\t\tif (mediumMatch) {\n\t\t\ttasks[i].text = tasks[i].text.replace(\"🔼\",\"\");\n\t\t\ttasks[i].priority = \"B\";\n\t\t\ttasks[i].priorityLabel = \"medium priority\";\n\t\t};\n\t\tvar highMatch = taskText.includes(\"⏫\");\n\t\tif (highMatch) {\n\t\t\ttasks[i].text = tasks[i].text.replace(\"⏫\",\"\");\n\t\t\ttasks[i].priority = \"A\";\n\t\t\ttasks[i].priorityLabel = \"high priority\";\n\t\t};\n\t\tif (!lowMatch && !mediumMatch && !highMatch) {\n\t\t\ttasks[i].priority = \"C\";\n\t\t}\n\t\tif (globalTaskFilter) {\n\t\t\ttasks[i].text = tasks[i].text.replaceAll(globalTaskFilter,\"\");\n\t\t} else {\n\t\t\ttasks[i].text = tasks[i].text.replaceAll(\"#task\",\"\");\n\t\t};\n\t\ttasks[i].text = tasks[i].text.replaceAll(\"[[\",\"\");\n\t\ttasks[i].text = tasks[i].text.replaceAll(\"]]\",\"\");\n\t\ttasks[i].text = tasks[i].text.replace(/\\[.*?\\]/gm,\"\");\n\t\ttasks[i].happens = happens;\n\t};\n\ttimelineDates.push(today);\n\ttimelineDates = [...new Set(timelineDates)].sort();\n};\n\nfunction setEvents() {\n\trootNode.querySelectorAll('.counter').forEach(cnt => cnt.addEventListener('click', (() => {\n\t\tvar activeFocus = Array.from(rootNode.classList).filter(c=>c.endsWith(\"Focus\") && !c.startsWith(\"today\"));\n\t\tif (activeFocus == cnt.id+\"Focus\") {\n\t\t\trootNode.classList.remove(activeFocus);\n\t\t\treturn false;\n\t\t};\n\t\trootNode.classList.remove.apply(rootNode.classList, Array.from(rootNode.classList).filter(c=>c.endsWith(\"Focus\") && !c.startsWith(\"today\")));\n\t\trootNode.classList.add(cnt.id+\"Focus\");\n\t})));\n\trootNode.querySelector('.todayHeader').addEventListener('click', (() => {\n\t\trootNode.classList.toggle(\"todayFocus\");\n\t}));\n};\n\nfunction getFilename(path) {\n\tvar filename = path.match(/^(?:.*\\/)?([^\\/]+?|)(?=(?:\\.[^\\/.]*)?$)/)[1];\n\treturn filename;\n};\n\nfunction getMetaFromNote(task, metaName) {\n\tvar meta = dv.pages('\"'+task.link.path+'\"')[metaName][0];\n\tif (meta) { return meta } else { return \"\" };\n};\n\nfunction momentToRegex(momentFormat) {\n\tmomentFormat = momentFormat.replaceAll(\".\", \"\\\\.\");\n\tmomentFormat = momentFormat.replaceAll(\",\", \"\\\\,\");\n\tmomentFormat = momentFormat.replaceAll(\"-\", \"\\\\-\");\n\tmomentFormat = momentFormat.replaceAll(\":\", \"\\\\:\");\n\tmomentFormat = momentFormat.replaceAll(\" \", \"\\\\s\");\n\t\n\tmomentFormat = momentFormat.replace(\"dddd\", \"\\\\w{1,}\");\n\tmomentFormat = momentFormat.replace(\"ddd\", \"\\\\w{1,3}\");\n\tmomentFormat = momentFormat.replace(\"dd\", \"\\\\w{2}\");\n\tmomentFormat = momentFormat.replace(\"d\", \"\\\\d{1}\");\n\t\n\tmomentFormat = momentFormat.replace(\"YYYY\", \"\\\\d{4}\");\n\tmomentFormat = momentFormat.replace(\"YY\", \"\\\\d{2}\");\n\t\n\tmomentFormat = momentFormat.replace(\"MMMM\", \"\\\\w{1,}\");\n\tmomentFormat = momentFormat.replace(\"MMM\", \"\\\\w{3}\");\n\tmomentFormat = momentFormat.replace(\"MM\", \"\\\\d{2}\");\n\t\n\tmomentFormat = momentFormat.replace(\"DDDD\", \"\\\\d{3}\");\n\tmomentFormat = momentFormat.replace(\"DDD\", \"\\\\d{1,3}\");\n\tmomentFormat = momentFormat.replace(\"DD\", \"\\\\d{2}\");\n\tmomentFormat = momentFormat.replace(\"D\", \"\\\\d{1,2}\");\n\t\n\tmomentFormat = momentFormat.replace(\"ww\", \"\\\\d{1,2}\");\n\t\n\tregEx = \"/^(\" + momentFormat + \")$/\";\n\n\treturn regEx;\n};\n\nfunction getTimeline(tasks) {\n\tvar lastYear = null;\n\t\n\tfor (i=0; i<timelineDates.length; i++) {\n\t\t\n\t\t// Variables\n\t\tvar notesFiltered = timelineNotes.filter(n=>moment(n.cday.toString()).format(\"YYYY-MM-DD\") == timelineDates[i]);\n\t\tvar tasksFiltered = tasks.filter(t=>Object.values(t.happens).includes(timelineDates[i].toString())).sort(t=> eval(sort));\n\t\tvar relative = moment(timelineDates[i].toString()).fromNow();\n\t\tvar date = moment(timelineDates[i].toString()).format(\"MM-DD ddd\")\n\t\tvar year = moment(timelineDates[i].toString()).format(\"YYYY\");\n\t\tvar detailsCls = \"\";\n\t\tvar content = \"\";\n\t\t\n\t\t// Add Year Section\n\t\tif (year != lastYear) {\n\t\t\tlastYear = year;\n\t\t\tcls = moment().format(\"YYYY\") == year ? \"current\" : \"\";\n\t\t\trootNode.querySelector(\"span\").appendChild(dv.el(\"div\", year, {cls: \"year \" + cls}));\n\t\t};\n\t\t\n\t\t// Add Today Information\n\t\tif (timelineDates[i] == today) {\n\t\t\tdetailsCls += \"today\";\n\t\t\t\n\t\t\tvar overdueCount = tasks.filter(t=>t.happens[\"overdue\"]).length;\n\t\t\tvar dueCount = tasksFiltered.filter(t=>t.happens[\"due\"]).length;\n\t\t\tvar startCount = tasksFiltered.filter(t=>t.happens[\"start\"]).length;\n\t\t\tvar scheduledCount = tasksFiltered.filter(t=>t.happens[\"scheduled\"]).length;\n\t\t\tvar doneCount = tasksFiltered.filter(t=>t.happens[\"done\"]).length;\n\t\t\tvar dailynoteCount = tasksFiltered.filter(t=>t.happens[\"dailynote\"]).length;\n\t\t\tvar processCount = tasksFiltered.filter(t=>t.happens[\"process\"]).length;\n\t\t\tvar todoCount = tasksFiltered.filter(t=>!t.completed && !t.happens[\"process\"] && !t.happens[\"start\"]).length;\n\t\t\tvar notesCount = timelineNotes.length;\n\t\t\t\n\t\t\tif (todoCount == 0 && processCount == 0 && overdueCount == 0) {\n\t\t\t\tvar motivation = \"☕️ Wow, looks like an empty day.<br>Relax!\"\n\t\t\t} else if (todoCount > 0 && todoCount < 4 && overdueCount < 3) {\n\t\t\t\tvar motivation = \"👍 Only \" + todoCount + \" task/s for today.<br>You can do this easily!\"\n\t\t\t} else if (todoCount > 0 && todoCount < 4 && overdueCount >= 3 && overdueCount < 5) {\n\t\t\t\tvar motivation = \"😀 Only \" + todoCount + \" task/s for today.<br>But keep an eye on the overdue tasks!\"\n\t\t\t} else if (todoCount >= 3 && overdueCount < 3) {\n\t\t\t\tvar motivation = \"🐥 Few things to do.<br>The faster you start, the faster you finish.\"\n\t\t\t} else if (todoCount >= 10 && overdueCount < 3) {\n\t\t\t\tvar motivation = \"⏰ Use your time wisely,<br>you have a lot to do today!\"\n\t\t\t} else if (processCount >= 6) {\n\t\t\t\tvar motivation = \"🥯 You are working on so many tasks at once.<br>Don't forget the break!\"\n\t\t\t} else if (overdueCount >= 3 && overdueCount < 6) {\n\t\t\t\tvar motivation = \"🐰 Unfortunately, you still have some unfinished tasks.<br>But the situation is not yet dramatic, so cheer up.\"\n\t\t\t} else if (overdueCount >= 6  && overdueCount < 10) {\n\t\t\t\tvar motivation = \"👀 Your unfinished tasks could slowly become a problem.<br>Keep the ball rolling!\"\n\t\t\t} else if (todoCount >= 8  && overdueCount >= 8) {\n\t\t\t\tvar motivation = \"🚧 Please take care of yourself!<br>Your situation is really tense at the moment.<br>I believe in you.\"\n\t\t\t};\n\t\t\t\n\t\t\tvar todayContent = \"<div class='todayHeader'>Today</div>\"\n\t\t\ttodayContent += \"<div class='counters'>\"\n\t\t\ttodayContent += \"<div class='counter' id='todo'><div class='count'>\" + todoCount + \"</div><div class='label'>To Do</div></div>\"\n\t\t\ttodayContent += \"<div class='counter' id='overdue'><div class='count'>\" + overdueCount + \"</div><div class='label'>Overdue</div></div>\"\n\t\t\ttodayContent += \"<div class='counter' id='process'><div class='count'>\" + processCount + \"</div><div class='label'>Process</div></div>\"\n\t\t\ttodayContent += \"</div>\"\n\t\t\ttodayContent += \"<div class='motivation'>\" + motivation + \"</div>\"\n\t\t\t\n\t\t\tcontent += todayContent;\n\t\t};\n\t\t\n\t\ttasksFiltered.forEach(function(item) {\n\t\t\t\n\t\t\tvar file = getFilename(item.path);\n\t\t\tvar link = item.link.path.replace(\"'\", \"&apos;\");\n\t\t\tvar text = item.text;\n\t\t\tvar info = \"\";\n\t\t\tvar color = getMetaFromNote(item, \"color\");\n\t\t\tvar cls = Object.keys(item.happens).find(key => item.happens[key] === timelineDates[i].toString());\n\t\t\t\n\t\t\tif (item.priorityLabel) {\n\t\t\t\tinfo += \"<div class='priority'><div class='icon'>\" + priorityIcon + \"</div><div class='label'>\" + item.priorityLabel + \"</div></div>\";\n\t\t\t};\n\t\t\t\n\t\t\tif (item.repeat) {\n\t\t\t\tinfo += \"<div class='repeat'><div class='icon'>\" + repeatIcon + \"</div><div class='label'>\" + item.repeat.replace(\"🔁\", \"\") + \"</div></div>\";\n\t\t\t};\n\t\t\t\n\t\t\titem.tags.forEach(function(tag) {\n\t\t\t\tvar tagText = tag.replace(\"#\",\"\");\n\t\t\t\tvar hexColorMatch = tag.match(/([a-fA-F0-9]{6}|[a-fA-F0-9]{3})\\/(.*)/);\n\t\t\t\tif (hexColorMatch) {\n\t\t\t\t\tvar style = \"style='--tag-color:#\" + hexColorMatch[1] + \";--tag-background:#\" + hexColorMatch[1] + \"1a'\";\n\t\t\t\t\ttagText = hexColorMatch[2];\n\t\t\t\t};\n\t\t\t\tinfo += \"<div class='tag' \" + style + \"><div class='icon'>\" + tagIcon + \"</div><div class='label'>\" + tagText + \"</div></div>\";\n\t\t\t\ttext = text.replace(tag, \"\");\n\t\t\t});\n\t\t\t\n\t\t\tvar task = \"<a class='internal-link' href='\" + link + \"'><div class='task \" + cls + \"' style='--task-color:\" + color + \"'><div class='timeline'><div class='icon'>\" + eval(cls+\"Icon\") + \"</div><div class='stripe'></div></div><div class='lines'><div class='line'><div class='file'>\" + file + \"</div></div><div class='line'>\" + info + \"</div><div class='content'>\" + text + \"</div></div></div></a>\";\n\t\t\tcontent += task;\n\t\t});\n\t\t\n\t\tnotesFiltered.forEach(function(note) {\n\t\t\tvar star = \"<a class='internal-link' href='\" + note.path + \"'><div class='task star'><div class='timeline'><div class='icon'>\" + starIcon + \"</div><div class='stripe'></div></div><div class='lines'><div class='line'><div class='file'>\" + note.name + \"</div></div><div class='line'></div><div class='content'></div></div></div></a>\";\n\t\t\tcontent += star;\n\t\t});\n\n\t\t// Add Task For Today\n\t\tif (timelineDates[i] == today) {\n\t\t\tvar newTask = \"<a class='internal-link' href='\" + dailyNoteFolder + timelineDates[i] + \"'><div class='task add'><div class='timeline'><div class='icon'>\" + addIcon + \"</div></div><div class='lines'><div class='line'><div class='file'>Add task for today</div></div></div></div></a>\";\n\t\t\tcontent += newTask;\n\t\t};\n\t\t\n\t\t// Set Date Template\n\t\tvar date = \"<div class='dateLine'><div class='date'>\" + date + \"</div><div class='relative'>\" + relative + \"</div></div><div class='content'>\" + content + \"</div>\"\n\t\t\n\t\t// Append To Root Node\n\t\trootNode.querySelector(\"span\").appendChild(dv.el(\"div\", date, {cls: \"details \" + detailsCls, attr: {\"data-year\": year}}));\n\t};\n};\n","count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"toc":""}