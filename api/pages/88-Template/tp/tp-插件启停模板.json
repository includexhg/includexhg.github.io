{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"&lt;%*// Form https://github.com/cumany/Blue-topaz-examples/issues/54 Thanks hustrjh var funcArr = [“Edit+”, “Table+”, “View+”];let myEn = a...","date":"2023-01-25T14:38:39.019Z","updated":"2023-01-25T14:38:39.019Z","comments":true,"path":"api/pages/88-Template/tp/tp-插件启停模板.json","covers":null,"excerpt":"","content":"<p>&lt;%*<br>// Form <a href=\"https://github.com/cumany/Blue-topaz-examples/issues/54\">https://github.com/cumany/Blue-topaz-examples/issues/54</a>  Thanks  <strong><a href=\"https://github.com/hustrjh\">hustrjh</a></strong></p>\n<p>var funcArr = [“Edit+”, “Table+”, “View+”];<br>let myEn = await tp.system.suggester([“🟢启用”, “🔴停用”, “🛠️插件分组”], [1, 0, 2], false, “选择操作，启用、禁用或管理插件”);<br>var i;<br>var num;<br>var item;<br>var choice;<br>var pluginArr = [];<br>var tmpArr = [];<br>-%&gt;<br>&lt;%*<br>//函数定义<br>ReadList = async (filename) =&gt; {<br>    if (tp.file.exists(filename)) {<br>        const f = tp.file.find_tfile(filename);<br>        let plugins = (await app.vault.read(f)).split(/\\r?\\n/);<br>        return plugins;<br>    }<br>}<br>FastSwitch = async (en) =&gt; {<br>    switch (en) {<br>        case 2://编辑插件分组<br>            choice = await tp.system.suggester([“📝编辑增强”, “📝表格增强”, “📝显示增强”, “📝必备插件”, “💼所有插件”], funcArr.concat([“Required+”, “All”]), false, “编辑插件分组”);<br>            break;<br>        default://启停插件<br>            choice = await tp.system.suggester([“📝编辑增强”, “📝表格增强”, “📝显示增强”, “📝以上全部”, “⚙更多操作”], funcArr.concat([“All”, “actions”]), false, “启停插件”);<br>            break;<br>    }<br>    if (choice == “actions”) {//更多操作<br>        choice = await tp.system.suggester([“📝除编辑增强外”, “📝除表格增强外”, “📝除显示增强外”, “📝除必备插件外”, “💼所有插件”,], funcArr.concat([“Required+”, “All”]), false, “更多选项”);<br>        switch (choice) {<br>            case “All”:<br>                pluginArr = await ReadList(“示例库内置的插件列表”);<br>                break;<br>            default:<br>                let AllpluginArr = Object.values(app.plugins.manifests).map(p =&gt; p.id).sort((a, b) =&gt; a.localeCompare(b))<br>                let RequiredArr = await ReadList(choice);<br>                pluginArr = AllpluginArr.filter((x) =&gt; !RequiredArr.some((item) =&gt; x === item));<br>                break;<br>        }<br>    }<br>    else {//常规启停操作<br>        switch (choice) {<br>            case “All”:<br>                // for (let index = 0; index &lt; funcArr.length; index++) {<br>                //     const item = funcArr[index];<br>                //     tmpArr = await ReadList(item);<br>                //     pluginArr = pluginArr.concat(tmpArr);<br>                //     }<br>                for (const item of funcArr) {<br>                    tmpArr = await ReadList(item);<br>                    pluginArr = pluginArr.concat(tmpArr);<br>                }<br>                break;<br>            default:<br>                // pluginArr=pluginArr.concat([“editing-toolbar”, “obsidian-outliner”, “various-complements”, “number-headings-obsidian”]);<br>                pluginArr = await ReadList(choice);<br>                break;<br>        }<br>    }<br>    num = pluginArr.length;<br>    switch (en) {<br>        case 1:<br>            for (i = 0; i &lt; num; i++) {<br>                await app.plugins.enablePlugin(pluginArr[i]);<br>            }<br>            new tp.obsidian.Notice(“已启用插件组：” + choice, 3000);<br>            break;<br>        case 0:<br>            for (i = 0; i &lt; num; i++) {<br>                await app.plugins.disablePlugin(pluginArr[i]);<br>            }<br>            new tp.obsidian.Notice(“已禁用插件组：” + choice, 3000);<br>            break;<br>        case 2:<br>            if (choice == “All”) choice = “获取插件列表”<br>            const filePath = app.metadataCache.getFirstLinkpathDest(choice, ‘’);<br>            app.workspace.getLeaf(‘tab’).openFile(filePath);<br>            break;<br>    }<br>}<br>//函数调用<br>await FastSwitch(myEn);<br>-%&gt;</p>\n","count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"toc":""}